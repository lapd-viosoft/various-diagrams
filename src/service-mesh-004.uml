@startuml

title Service landscape - Istio
skinparam componentStyle uml2

actor Admin

package "namespace: Control Plane" #LightSalmon {

  interface "Rules API" as rulesAPI

  package "pod: Pilot" #White {
    component "container:\n<b><b>Pilot</b>" as Pilot
  }
  package "pod: Mixer" #White {
    component "container:\n<b>Mixer</b>" as Mixer
  }
}

package "namespace: Application Service" #LightBlue {

  package "pod: Application 1" #White {
    component "container:\n<b> APP1 </b>" as APP1
    component "container:\n<b> envoy/Proxy</b>" as APP1Proxy #Yellow
  }

  package "pod: Application 2" #White {
    component "container:\n<b> envoy/Proxy</b>" as APP2Proxy #Yellow
    component "container:\n<b> APP2</b>" as APP2
  }

  package "pod: Ingress" #White {
    component "container:\n<b> envoy/Ingress</b>" as Ingress #Yellow
  }
  package "pod: Egress" #White {
    component "container:\n<b> envoy/Egress</b>" as Egress #Yellow
  }

}

package "External/Client" #LightGreen {
  component Client
}
package "External/Server" #LightGreen {
  component Server
}

Admin -d-> rulesAPI #Blue

Pilot -l-> APP1Proxy #Blue
Pilot -l-> APP2Proxy #Blue

Mixer -l-> APP1Proxy #Blue
Mixer -l-> APP2Proxy #Blue

rulesAPI -r-> Pilot #Blue
rulesAPI -d-> Mixer #Blue

APP1Proxy --> APP2Proxy
APP2Proxy --> APP1Proxy

APP1 -d-> APP1Proxy
APP1Proxy -u-> APP1

APP2 -u-> APP2Proxy
APP2Proxy -d-> APP2

Client -u-> Ingress
Egress -d-> Server

Ingress -l-> APP1Proxy
APP2Proxy -r-> Egress

legend
  * Blue: Management traffic
  * Red: Service traffic
  * Arrow indicates connection initiation, not data flow
end legend

@enduml


